{
	"Data": {
		"Anchor": 1245,
		"Caret": 1245,
		"Code": "#version 410 core\n\nuniform float fGlobalTime; \/\/ in seconds\nuniform vec2 v2Resolution; \/\/ viewport resolution (in pixels)\n\nuniform sampler1D texFFT; \/\/ towards 0.0 is bass \/ lower freq, towards 1.0 is higher \/ treble freq\nuniform sampler1D texFFTSmoothed; \/\/ this one has longer falloff and less harsh transients\nuniform sampler1D texFFTIntegrated; \/\/ this is continually increasing\nuniform sampler2D texChecker;\nuniform sampler2D texNoise;\nuniform sampler2D texTex1;\nuniform sampler2D texTex2;\nuniform sampler2D texTex3;\nuniform sampler2D texTex4;\n\nlayout(location = 0) out vec4 out_color; \/\/ out_color must be written in order to see anything\n#define iTime fGlobalTime\nmat2 r(float a){\r\n  float c=cos(a),s=sin(a);\r\n   return mat2(c,-s,s,c);\r\n  }\nvoid main(void)\n{\n  vec2 uv = (gl_FragCoord.xy-.5 * v2Resolution.xy)  \/ v2Resolution.y;\n for(float i=0.;i<=4.;i++){\r\n        uv = abs(uv)-.1;\r\n   }\r\n uv*=r(floor(cos(length(uv*2)*10)-iTime));\r\n   vec3 col = vec3(0.);\r\n  for(float y=-1.; y<=1.; y++) {\r\n     float d =  .1;\r\n  for(float x=-1.; x<=1.; x++){\r\n      vec2 off = vec2(x,y);\r\n     vec2 gv = off +uv;\r\n    gv*=r(length(vec2(x,y))*1.+iTime);\r\n     d += .05\/length(gv+sin(iTime+10.*atan(uv.x,uv.y)));\r\n  }\r\n col[int(mod(int(y)+2,2))] = d;\r\n}\n  out_color = vec4(col,1.);\n}",
		"Compile": true,
		"FirstVisibleLine": 13 
	} 
} 
